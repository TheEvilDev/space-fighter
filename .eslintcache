[{"/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/index.tsx":"1","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/reportWebVitals.js":"2","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/App.tsx":"3","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/objects/ArWing/index.tsx":"4","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/objects/ArWing/Loading.tsx":"5","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/controllers/camera.tsx":"6","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/environment/terrain/index.tsx":"7","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/environment/hud/target.tsx":"8","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/gameState.ts":"9","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/environment/lasers/index.tsx":"10","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/controllers/laser-controller.tsx":"11","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/gameTimer.tsx":"12","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/objects/Enemy/asteroid/index.tsx":"13","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/environment/hud/score-card.tsx":"14","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/components/recoil-canvas.tsx":"15","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/environment/sky-box/index.tsx":"16","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/objects/Enemy/creepy-face/index.tsx":"17","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/objects/event-logger/index.tsx":"18"},{"size":500,"mtime":1609636492735,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1609519115945,"results":"21","hashOfConfig":"20"},{"size":1323,"mtime":1609686035388,"results":"22","hashOfConfig":"20"},{"size":1425,"mtime":1609532051909,"results":"23","hashOfConfig":"20"},{"size":427,"mtime":1609527700980,"results":"24","hashOfConfig":"20"},{"size":762,"mtime":1609636623253,"results":"25","hashOfConfig":"20"},{"size":797,"mtime":1609635905088,"results":"26","hashOfConfig":"20"},{"size":1870,"mtime":1609684673761,"results":"27","hashOfConfig":"20"},{"size":1154,"mtime":1609635629451,"results":"28","hashOfConfig":"20"},{"size":631,"mtime":1609567650628,"results":"29","hashOfConfig":"20"},{"size":1146,"mtime":1609532459547,"results":"30","hashOfConfig":"20"},{"size":2429,"mtime":1609635535555,"results":"31","hashOfConfig":"20"},{"size":596,"mtime":1609634438111,"results":"32","hashOfConfig":"20"},{"size":467,"mtime":1609562083521,"results":"33","hashOfConfig":"20"},{"size":408,"mtime":1609637951443,"results":"34","hashOfConfig":"20"},{"size":608,"mtime":1609565822411,"results":"35","hashOfConfig":"20"},{"size":958,"mtime":1609634645694,"results":"36","hashOfConfig":"20"},{"size":935,"mtime":1609687646358,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"4wea7l",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"40"},"/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/index.tsx",[],["86","87"],"/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/reportWebVitals.js",[],["88","89"],"/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/App.tsx",["90","91","92","93","94"],"import CameraControls from \"controllers/camera\";\nimport Target from \"environment/hud/target\";\nimport Terrain from \"environment/terrain\";\nimport Loading from \"objects/ArWing/Loading\";\nimport React, { Suspense } from \"react\";\nimport ArWing from './objects/ArWing';\nimport { RecoilRoot } from \"recoil\";\n\nimport \"./styles.css\";\nimport Lasers from \"environment/lasers\";\nimport LaserController from \"controllers/laser-controller\";\nimport Enemies from \"objects/Enemy/asteroid\";\nimport GameTimer from \"gameTimer\";\nimport ScoreCard from \"environment/hud/score-card\";\nimport RecoilCanvas from \"components/recoil-canvas\";\nimport SkyBox from \"environment/sky-box\";\nimport { DefaultXRControllers, Hands } from \"@react-three/xr\";\nimport EventLogger from \"objects/event-logger\";\n\n\nexport default function App() {\n  return (\n      <RecoilRoot>\n        <ScoreCard />\n        <RecoilCanvas style={{ background: \"#171717\" }}>\n          <DefaultXRControllers />\n          <Hands />\n          <directionalLight intensity={0.5} />\n          {/* <Suspense fallback={<Loading />}>\n            <ArWing />\n          </Suspense> */}\n          <Target />\n          <EventLogger />\n          <Terrain />\n          <Lasers />\n          <LaserController />\n          <Enemies />\n          <GameTimer />\n        </RecoilCanvas>\n      </RecoilRoot>\n  );\n};","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/objects/ArWing/index.tsx",[],["95","96"],"/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/objects/ArWing/Loading.tsx",[],["97","98"],"/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/controllers/camera.tsx",["99","100"],"import { useEffect, useRef } from \"react\";\nimport { PointerLockControls } from 'three/examples/jsm/controls/PointerLockControls';\n\nimport {\n  useFrame,\n  useThree,\n} from \"react-three-fiber\";\n\nconst CameraControls = () => {\n    // Get a reference to the Three.js Camera, and the canvas html element.\n    // We need these to setup the OrbitControls component.\n    // https://threejs.org/docs/#examples/en/controls/OrbitControls\n    const {\n      camera,\n      gl: { domElement },\n    } = useThree();\n\n    useEffect(() => {\n      const controls = new PointerLockControls(camera, domElement);\n      controls.connect();\n\n      return () => {\n        controls.disconnect();\n      };\n    }, [camera, domElement]);\n\n    return null;\n  };\n\nexport default CameraControls;",["101","102"],"/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/environment/terrain/index.tsx",["103"],"import { useRef } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\n\nconst GROUND_HEIGHT = -50; // A Constant to store the ground height of the game.\n\n// A Ground plane that moves relative to the player. The player stays at 0,0\nfunction Terrain() {\n    const terrain = useRef(null);\n\n    return (\n        <mesh\n            visible\n            position={[0, GROUND_HEIGHT, 0]}\n            rotation={[-Math.PI / 2, 0, 0]}\n            ref={terrain}\n        >\n            <planeBufferGeometry attach=\"geometry\" args={[5000, 5000, 128, 128]} />\n            <meshStandardMaterial\n                attach=\"material\"\n                color=\"white\"\n                roughness={1}\n                metalness={0}\n                wireframe\n            />\n        </mesh>\n    );\n}\n\nexport default Terrain","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/environment/hud/target.tsx",[],"/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/gameState.ts",[],"/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/environment/lasers/index.tsx",[],"/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/controllers/laser-controller.tsx",[],"/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/gameTimer.tsx",["104"],"// A helper function to calculate the distance between two points in 3d space.\n\nimport { enemyPositionState, laserPositionState, scoreState } from \"gameState\";\nimport { useFrame } from \"react-three-fiber\";\nimport { useRecoilState } from \"recoil\";\n\n// Game settings.\nconst LASER_RANGE = 100;\nconst LASER_Z_VELOCITY = 1;\nconst ENEMY_SPEED = 0.1;\nconst GROUND_HEIGHT = -50;\n\n// Used to detect lasers intersecting with enemies.\nfunction distance(p1, p2) {\n    const a = p2.x - p1.x;\n    const b = p2.y - p1.y;\n    const c = p2.z - p1.z;\n  \n    return Math.sqrt(a * a + b * b + c * c);\n  }\n  \n  // This component runs game logic on each frame draw to update game state.\n  function GameTimer() {\n    const [enemies, setEnemies] = useRecoilState(enemyPositionState);\n    const [lasers, setLaserPositions] = useRecoilState(laserPositionState);\n    const [score, setScore] = useRecoilState(scoreState);\n  \n    useFrame(({ mouse }) => {\n      // Map through all of the enemies in state. Detect if each enemy is within one unit of a laser if they are set that place in the return array to true.\n      // The result will be an array where each index is either a hit enemy or an unhit enemy.\n      const hitEnemies = enemies\n        ? enemies.map(\n            (enemy) =>\n              lasers.filter(\n                (laser) =>\n                  lasers.filter((laser) => distance(laser, enemy) < 3).length > 0\n              ).length > 0\n          )\n        : [];\n  \n      if (hitEnemies.includes(true) && enemies.length > 0) {\n        setScore(score + hitEnemies.filter((hit) => hit).length);\n        console.log(\"hit detected\");\n      }\n  \n      // Move all of the enemies. Remove enemies that have been destroyed, or that have passed the player.\n      setEnemies(\n        enemies\n          .map((enemy) => ({ x: enemy.x, y: enemy.y, z: enemy.z }))\n          .filter((enemy, idx) => !hitEnemies[idx] && enemy.z < 0)\n      );\n      // Move the Lasers and remove lasers at end of range or that have hit the ground.\n      setLaserPositions(\n        lasers\n          .map((laser) => ({\n            id: laser.id,\n            x: laser.x + laser.velocity[0],\n            y: laser.y + laser.velocity[1],\n            z: laser.z - LASER_Z_VELOCITY,\n            velocity: laser.velocity,\n          }))\n          .filter((laser) => laser.z > -LASER_RANGE && laser.y > GROUND_HEIGHT)\n      );\n    });\n    \n    return null;\n  }\n\n  export default GameTimer;","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/objects/Enemy/asteroid/index.tsx",[],"/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/environment/hud/score-card.tsx",[],"/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/components/recoil-canvas.tsx",[],"/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/environment/sky-box/index.tsx",[],["105","106"],"/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/objects/Enemy/creepy-face/index.tsx",["107","108","109"],"import { shipPositionState } from \"gameState\";\nimport { FC, useRef } from \"react\";\nimport { useLoader, useFrame } from \"react-three-fiber\";\nimport { useRecoilState } from \"recoil\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\ninterface CreepyFaceProps {\n    position: {\n        x: number,\n        y: number,\n        z: number\n    }\n};\n\nconst CreepyFace : FC<CreepyFaceProps> = ({ position }) => {\n    const model = useRef(null);\n\n    const scene = useLoader(GLTFLoader, \"./models/creepy-face.glb\");\n    const nodes = (scene as unknown as any).nodes;\n\n    return (\n        <group ref={model} position={[position.x, position.y, position.z]}>\n        <mesh visible geometry={nodes['Quad_Sphere'].geometry}>\n            <meshStandardMaterial\n            attach=\"material\"\n            color=\"white\"\n            roughness={0.3}\n            metalness={0.3}\n            />\n        </mesh>\n        </group>\n    );\n}\n\nexport default CreepyFace;","/mnt/c/Users/Mitchell Lee/workbench/space-fighter/src/objects/event-logger/index.tsx",["110","111"],"import { useXREvent } from \"@react-three/xr\";\nimport { FC, useCallback, useEffect } from \"react\";\nimport debug from 'debug';\n\nconst logger = debug('ControllerEvents');\n\nenum XREventType {\n    select = 'select',\n    selectstart = 'selectstart',\n    selectend = 'selectend',\n    squeeze = 'squeeze',\n    squeezestart = 'squeezestart',\n    squeezeend = 'squeezeend'\n}\n\ninterface EventLoggerProps {}\n\nconst EventLogger : FC<EventLoggerProps> = () => {\n\n    const log = useCallback((...args) => {\n        const elogger = logger.extend\n        console.log(...args);\n    }, []);\n\n    useXREvent(XREventType.select, log);\n    useXREvent(XREventType.selectstart, log);\n    useXREvent(XREventType.selectend, log);\n    useXREvent(XREventType.squeeze, log);\n    useXREvent(XREventType.squeezestart, log);\n    useXREvent(XREventType.squeezeend, log);\n    useXREvent(XREventType.squeezeend, log);\n\n    return null;    \n}\n\nexport default EventLogger;",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":22},{"ruleId":"116","severity":1,"message":"120","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":15},{"ruleId":"116","severity":1,"message":"121","line":5,"column":17,"nodeType":"118","messageId":"119","endLine":5,"endColumn":25},{"ruleId":"116","severity":1,"message":"122","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":14},{"ruleId":"116","severity":1,"message":"123","line":16,"column":8,"nodeType":"118","messageId":"119","endLine":16,"endColumn":14},{"ruleId":"112","replacedBy":"124"},{"ruleId":"114","replacedBy":"125"},{"ruleId":"112","replacedBy":"126"},{"ruleId":"114","replacedBy":"127"},{"ruleId":"116","severity":1,"message":"128","line":1,"column":21,"nodeType":"118","messageId":"119","endLine":1,"endColumn":27},{"ruleId":"116","severity":1,"message":"129","line":5,"column":3,"nodeType":"118","messageId":"119","endLine":5,"endColumn":11},{"ruleId":"112","replacedBy":"130"},{"ruleId":"114","replacedBy":"131"},{"ruleId":"116","severity":1,"message":"129","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":18},{"ruleId":"116","severity":1,"message":"132","line":10,"column":7,"nodeType":"118","messageId":"119","endLine":10,"endColumn":18},{"ruleId":"112","replacedBy":"133"},{"ruleId":"114","replacedBy":"134"},{"ruleId":"116","severity":1,"message":"135","line":1,"column":10,"nodeType":"118","messageId":"119","endLine":1,"endColumn":27},{"ruleId":"116","severity":1,"message":"129","line":3,"column":21,"nodeType":"118","messageId":"119","endLine":3,"endColumn":29},{"ruleId":"116","severity":1,"message":"136","line":4,"column":10,"nodeType":"118","messageId":"119","endLine":4,"endColumn":24},{"ruleId":"116","severity":1,"message":"137","line":2,"column":27,"nodeType":"118","messageId":"119","endLine":2,"endColumn":36},{"ruleId":"116","severity":1,"message":"138","line":21,"column":15,"nodeType":"118","messageId":"119","endLine":21,"endColumn":22},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"@typescript-eslint/no-unused-vars","'CameraControls' is defined but never used.","Identifier","unusedVar","'Loading' is defined but never used.","'Suspense' is defined but never used.","'ArWing' is defined but never used.","'SkyBox' is defined but never used.",["139"],["140"],["139"],["140"],"'useRef' is defined but never used.","'useFrame' is defined but never used.",["139"],["140"],"'ENEMY_SPEED' is assigned a value but never used.",["139"],["140"],"'shipPositionState' is defined but never used.","'useRecoilState' is defined but never used.","'useEffect' is defined but never used.","'elogger' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]